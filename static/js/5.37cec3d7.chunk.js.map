{"version":3,"sources":["pages/contact/sections/ContactSection.tsx","pages/contact/sections/Happy.tsx","pages/contact/sections/Details.tsx","pages/contact/sections/FormWriteMessage.tsx","pages/contact/Contact.tsx","middleware/Scroll.ts","images/home/Layer_15.png","images/home/Layer_18.png"],"names":["Layer19","require","ContactSection","Section","styled","style1","section","props","spanColor","Layer15","Layer18","Happy","scrollRef","useRef","ref","animate","Scroll","img","src","alt","variants","start","x","transition","duration","end","article","opacity","y","motion","nav","navActive","Details","FormWriteMessage","SignupSchema","Yup","shape","firstName","min","max","required","lastName","email","subject","oneOf","message","initialValues","validationSchema","onSubmit","values","action","resetForm","errors","touched","name","placeholder","type","as","value","cols","rows","Contact","ContactFromWrapper","div","useState","scrollY","setScrollY","flag","setflag","useEffect","window","addEventListener","current","getBoundingClientRect","innerHeight","module","exports"],"mappings":"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","file":"static/js/5.37cec3d7.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { style1Type, style1 } from '../../../state/style/style1';\r\n\r\nconst Layer19 = require('../../../images/contact/Layer_19.png');\r\n\r\nexport interface ContactSectionProps {}\r\n\r\nconst ContactSection: React.SFC<ContactSectionProps> = () => {\r\n  return (\r\n    <Section styled={style1}>\r\n      <div>\r\n        <header>\r\n          <h1>contact</h1>\r\n          <span>we welcome you in our restaurant</span>\r\n        </header>\r\n      </div>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default ContactSection;\r\n\r\nconst Section = styled.section<style1Type>`\r\n  background: url(${Layer19}) no-repeat center;\r\n\r\n  height: 700px;\r\n  width: 100%;\r\n  z-index: 10;\r\n  & > div {\r\n    height: 700px;\r\n    width: 100%;\r\n    top: 0;\r\n    background: rgba(30, 38, 51, 0.3);\r\n    position: absolute;\r\n    display: block;\r\n    z-index: 20;\r\n    & > header {\r\n      padding: 500px 5px;\r\n      width: 100%;\r\n      max-width: 1200px;\r\n      margin: 0 auto;\r\n      z-index: 400;\r\n      display: block;\r\n\r\n      & > h1 {\r\n        font-size: 3.1em;\r\n        color: white;\r\n        font-weight: normal;\r\n      }\r\n\r\n      & > span {\r\n        font-size: 2.4em;\r\n        color: ${props => props.styled.spanColor};\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1000px) {\r\n    & > div {\r\n      & > header {\r\n        & > h1 {\r\n          font-size: 5em;\r\n        }\r\n        & > span {\r\n          font-size: 3em;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useRef } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { motion } from 'framer-motion';\r\nimport { style1, style1Type } from '../../../state/style/style1';\r\nimport Scroll from '../../../middleware/Scroll';\r\n\r\nconst Layer15 = require('../../../images/home/Layer_15.png');\r\nconst Layer18 = require('../../../images/home/Layer_18.png');\r\n\r\nexport interface HappyProps {}\r\n\r\nconst Happy: React.FC<HappyProps> = () => {\r\n  const scrollRef = useRef<HTMLDivElement>(null);\r\n\r\n  return (\r\n    <Section ref={scrollRef} styled={style1} animate={Scroll(scrollRef) ? 'start' : 'end'}>\r\n      <figure>\r\n        <motion.img\r\n          src={Layer15}\r\n          alt=\"\"\r\n          variants={{\r\n            start: { x: 0, transition: { duration: 1 } },\r\n\r\n            end: { x: '-2000px', transition: { duration: 0 } },\r\n          }}\r\n        />\r\n        <motion.img\r\n          src={Layer18}\r\n          alt=\"\"\r\n          variants={{\r\n            start: { x: 0, transition: { duration: 1 } },\r\n            end: { x: '2000px', transition: { duration: 0 } },\r\n          }}\r\n        />\r\n      </figure>\r\n      <motion.article\r\n        variants={{\r\n          start: { opacity: 1, y: 0, transition: { duration: 1 } },\r\n          end: { opacity: 0, y: '1000px', transition: { duration: 0 } },\r\n        }}\r\n      >\r\n        <h2>happy</h2>\r\n        <span>TO HEAR FROM YOU, CONTACT US</span>\r\n        <p>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Inventore, consequatur, omnis soluta reprehenderit\r\n          quidem totam perspiciatis excepturi quod iusto delectus numquam optio aliquam officia molestias quasi earum!\r\n          Officiis laudantium quod nihil hic soluta, rem, sapiente tempore\r\n        </p>\r\n      </motion.article>\r\n    </Section>\r\n  );\r\n};\r\nexport default Happy;\r\n\r\nconst Section = styled(motion.section)<style1Type>`\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding: 80px 5px;\r\n  & > figure {\r\n    margin: 0 auto;\r\n    padding: 20px 0px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    & > img:first-child {\r\n      align-self: flex-end;\r\n      display: block;\r\n      width: 80%;\r\n    }\r\n    & > img:last-child {\r\n      align-self: flex-start;\r\n      margin: -130px 0 0 0;\r\n      display: block;\r\n      width: 80%;\r\n      z-index: -1;\r\n    }\r\n  }\r\n  & > article {\r\n    margin: 0 auto;\r\n    width: auto;\r\n    max-width: 500px;\r\n    padding: 20px 0px;\r\n    & > h2 {\r\n      text-align: end;\r\n      margin: 20px 0;\r\n    }\r\n    & > span {\r\n      color: ${props => props.styled.nav.navActive};\r\n      text-align: end;\r\n      width: 100%;\r\n      display: block;\r\n      letter-spacing: 3px;\r\n    }\r\n    & > p {\r\n      margin: 20px 0;\r\n      text-align: end;\r\n    }\r\n  }\r\n  @media screen and (min-width: 550px) {\r\n    & > figure {\r\n      width: 500px;\r\n    }\r\n  }\r\n  @media screen and (min-width: 1000px) {\r\n    flex-direction: row-reverse;\r\n    & > figure {\r\n      margin: 0 50px;\r\n    }\r\n    & > article {\r\n      margin: 0 50px;\r\n\r\n      & > h2 {\r\n        text-align: end;\r\n        margin: 20px -100px 20px 0;\r\n      }\r\n      & > span {\r\n        color: ${props => props.styled.nav.navActive};\r\n        text-align: end;\r\n      }\r\n      & > p {\r\n        margin: 20px 0;\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { style1Type, style1 } from '../../../state/style/style1';\r\n\r\nexport interface DetailsProps {}\r\n\r\nconst Details: React.SFC<DetailsProps> = () => {\r\n  return (\r\n    <Section styled={style1}>\r\n      <h3>CONTACT DETAILS</h3>\r\n      <span>ADDRESS</span>\r\n      <p>355 E STH ST, MANHATTAN, NY 10003</p>\r\n      <span>PHONE</span>\r\n      <p>+939 777 55 33</p>\r\n      <span>EMAIL</span>\r\n      <p>RESERVATION@RENOME.COM</p>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n\r\nconst Section = styled.section<style1Type>`\r\n  padding: 5px;\r\n  order: 1;\r\n  & > h3 {\r\n    font-size: 2em;\r\n    color: ${props => props.styled.spanColor};\r\n    margin-bottom: 20px;\r\n  }\r\n  & > span {\r\n    color: ${props => props.styled.spanColor};\r\n    font-size: 1.5em;\r\n    margin-left: 15px;\r\n  }\r\n  & > p {\r\n    font-size: 1.2em;\r\n    font-weight: bold;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  @media screen and (min-width: 600px) {\r\n    margin: 0 0 0 60px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { style1, style1Type } from '../../../state/style/style1';\r\n\r\nexport interface FormWriteMessageProps {}\r\n\r\nconst FormWriteMessage: React.SFC<FormWriteMessageProps> = () => {\r\n  const SignupSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .min(2, 'Too Short!')\r\n      .max(50, 'Too Long!')\r\n      .required('Required'),\r\n    lastName: Yup.string()\r\n      .min(2, 'Too Short!')\r\n      .max(50, 'Too Long!')\r\n      .required('Required'),\r\n    email: Yup.string()\r\n      .email('Invalid email')\r\n      .required('Required'),\r\n\r\n    subject: Yup.string().oneOf(['red', 'green', 'blue'], 'Required'),\r\n    message: Yup.string()\r\n      .min(2, 'Too Short!')\r\n      .max(4000, 'Too Long!')\r\n      .required('Required'),\r\n  });\r\n\r\n  return (\r\n    <Section styled={style1}>\r\n      <h3>WRITE A MESSAGE</h3>\r\n      <Formik\r\n        initialValues={{\r\n          firstName: '',\r\n          lastName: '',\r\n          email: '',\r\n          subject: 'Subject',\r\n          message: '',\r\n        }}\r\n        validationSchema={SignupSchema}\r\n        onSubmit={(values, action) => {\r\n          action.resetForm();\r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form>\r\n            <div>\r\n              {errors.firstName && touched.firstName ? <div>{errors.firstName}</div> : null}\r\n              <Field name=\"firstName\" placeholder=\"First Name *\" />\r\n            </div>\r\n            <div>\r\n              {errors.lastName && touched.lastName ? <div>{errors.lastName}</div> : null}\r\n              <Field name=\"lastName\" placeholder=\"Last Name *\" />\r\n            </div>\r\n            <div>\r\n              {errors.email && touched.email ? <div>{errors.email}</div> : null}\r\n              <Field name=\"email\" type=\"email\" placeholder=\"Email *\" />\r\n            </div>\r\n            <div>\r\n              {errors.subject && touched.subject ? <div>{errors.subject}</div> : null}\r\n              <Field as=\"select\" name=\"subject\">\r\n                <option value=\"Subject\">Subject</option>\r\n                <option value=\"red\">Red</option>\r\n                <option value=\"green\">Green</option>\r\n                <option value=\"blue\">Blue</option>\r\n              </Field>\r\n            </div>\r\n            <div>\r\n              {errors.message && touched.message ? <div>{errors.message}</div> : null}\r\n              <Field as=\"textarea\" name=\"message\" placeholder=\"Message *\" cols=\"30\" rows=\"5\" />\r\n            </div>\r\n            <button type=\"submit\">SEND</button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default FormWriteMessage;\r\n\r\nconst Section = styled.section<style1Type>`\r\n  @import url('href=\"https://fonts.googleapis.com/css?family=Montserrat:400,700&display=swap&subset=latin-ext\" rel=\"stylesheet\"');\r\n\r\n  padding: 8px;\r\n  & > h3 {\r\n    font-size: 2em;\r\n    color: ${props => props.styled.spanColor};\r\n    margin-bottom: 20px;\r\n    padding: 5px 0;\r\n  }\r\n  & > form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    /* flex-wrap: wrap; */\r\n    & input {\r\n      height: 50px;\r\n      display: block;\r\n      margin: 0px 0;\r\n      font-size: 1.5em;\r\n      border: none;\r\n      padding: 5px;\r\n      &::placeholder {\r\n        color: black;\r\n        opacity: 1;\r\n      }\r\n    }\r\n    & button {\r\n      margin: 0 auto;\r\n      height: 50px;\r\n      border: none;\r\n      width: 135px;\r\n      background-color: rgb(250, 250, 250);\r\n      &:hover {\r\n        background-color: rgb(236, 236, 236);\r\n      }\r\n    }\r\n    & select {\r\n      border: none;\r\n      font-size: 1.5em;\r\n      height: 50px;\r\n      padding: 0;\r\n    }\r\n\r\n    & textarea {\r\n      height: 100px;\r\n      font-family: 'Montserrat', sans-serif;\r\n      margin: 0 0;\r\n      font-size: 1.5em;\r\n      border: none;\r\n      resize: none;\r\n      overflow: auto;\r\n      padding: 5px;\r\n      &::placeholder {\r\n        color: black;\r\n        opacity: 1;\r\n      }\r\n    }\r\n    & > div {\r\n      color: red;\r\n      & > {\r\n        height: 13px;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1000px) {\r\n    flex-basis: 830px;\r\n\r\n    & form {\r\n      display: flex;\r\n      flex-direction: initial;\r\n      flex-wrap: wrap;\r\n      justify-content: space-between;\r\n      & input {\r\n        width: 391.5px;\r\n      }\r\n      & select {\r\n        width: 391.5px;\r\n        margin: 0px 0;\r\n      }\r\n      & textarea {\r\n        width: 391.5px;\r\n      }\r\n      & button {\r\n        margin: 10px 0 0 auto;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ContactSection from './sections/ContactSection';\r\nimport Happy from './sections/Happy';\r\nimport Details from './sections/Details';\r\nimport FormWriteMessage from './sections/FormWriteMessage';\r\n// import Map from './sections/Map';\r\n\r\nexport interface ContactProps {}\r\n\r\nconst Contact: React.SFC<ContactProps> = () => {\r\n  return (\r\n    <>\r\n      <ContactSection />\r\n      <Happy />\r\n\r\n      <ContactFromWrapper>\r\n        <Details />\r\n        <FormWriteMessage />\r\n      </ContactFromWrapper>\r\n      {/* <Map /> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n\r\nconst ContactFromWrapper = styled.div`\r\n  margin-bottom: 100px;\r\n  @media screen and (min-width: 600px) {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n`;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst Scroll = (scrollRef: any, y: number = 1): boolean | number => {\r\n  const [scrollY, setScrollY] = useState(0);\r\n  const [flag, setflag] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (scrollY > -y) {\r\n      window.addEventListener('scroll', () => {\r\n        if (!!scrollRef.current) {\r\n          setScrollY(scrollRef.current.getBoundingClientRect().y - window.innerHeight);\r\n        }\r\n      });\r\n    } else {\r\n      setflag(true);\r\n    }\r\n  }, [scrollY]);\r\n\r\n  return flag;\r\n};\r\nexport default Scroll;\r\n\r\nexport interface ScrolllProps {}\r\n","module.exports = __webpack_public_path__ + \"static/media/Layer_15.4adb52a0.png\";","module.exports = __webpack_public_path__ + \"static/media/Layer_18.9ac325ba.png\";"],"sourceRoot":""}