{"version":3,"sources":["state/style/style1.ts","layout/navbar/components/Freatures.tsx","layout/navbar/components/BasketDropDown.tsx","layout/navbar/components/NavLinks.tsx","layout/navbar/components/HamburgerMenu.tsx","layout/navbar/components/NavIcons.tsx","layout/navbar/NavBar.tsx","pages/Pages.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["style1","nav","fontColor","navColor1","navColor2","navHamburgerColor","navActive","spanColor","Features","toggle","close","Ul","variants","window","screen","width","closed","x","transition","duration","open","openFeatures","type","onClick","to","exact","activeClassName","styled","motion","ul","BasketDropDown","basketOpen","Styled","animate","basketClose","y","div","NavLinks","setIsOpen","setFreatures","ContainerLi","placeholder","style","color","opacity","li","props","HamburgerMenu","Button","Span","rotate","SpanChild","button","span","NavIcons","state","isOpen","setBasketOpen","NavBar","useState","features","setFontColor","location","useLocation","useEffect","pathname","Home","lazy","About","Menu","Reservations","Blog","Shop","Contact","Pages","path","component","App","fallback","basename","process","GlobalStyle","createGlobalStyle","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.64136b60.chunk.js","sourcesContent":["export const style1 = {\r\n  nav: {\r\n    fontColor: '#fff',\r\n    navColor1: '#fff',\r\n    navColor2: '#000000',\r\n    navHamburgerColor: '#1E2633',\r\n    navActive: '#985e5b',\r\n  },\r\n  spanColor: '#985e5b',\r\n};\r\n\r\nexport interface style1Type {\r\n  styled: {\r\n    nav: {\r\n      fontColor: string;\r\n      navColor1: string;\r\n      navColor2: string;\r\n      navHamburgerColor: string;\r\n      navActive: string;\r\n    };\r\n\r\n    spanColor: string;\r\n  };\r\n\r\n  fontColor?: string;\r\n}\r\n","import { MdKeyboardArrowLeft } from 'react-icons/md';\r\nimport React from 'react';\r\n\r\nimport { motion } from 'framer-motion';\r\nimport styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport interface FeaturesProps {\r\n  toggle: () => void;\r\n  close: () => void;\r\n}\r\n\r\nconst Features: React.SFC<FeaturesProps> = ({ toggle, close }) => (\r\n  <div>\r\n    <Ul\r\n      variants={\r\n        window.screen.width < 1000\r\n          ? {\r\n              closed: { x: '-130%', transition: { duration: 0.6 } },\r\n              open: { x: '-130%', transition: { duration: 0.6 } },\r\n              openFeatures: { x: 0, transition: { duration: 0.6 } },\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n      <li>\r\n        <button type=\"button\" onClick={toggle}>\r\n          <MdKeyboardArrowLeft />\r\n        </button>\r\n        <span>Back</span>\r\n      </li>\r\n      <NavLink to=\"/OnePage\" exact activeClassName=\"activeLink\" onClick={close}>\r\n        <li>One page</li>\r\n      </NavLink>\r\n      <NavLink to=\"/Portfolio\" exact activeClassName=\"activeLink\" onClick={close}>\r\n        <li>Portfolio</li>\r\n      </NavLink>\r\n      <NavLink to=\"/Shortcodes\" exact activeClassName=\"activeLink\" onClick={close}>\r\n        <li>Shortcodes</li>\r\n      </NavLink>\r\n    </Ul>\r\n  </div>\r\n);\r\n\r\nexport default Features;\r\n\r\nconst Ul = styled(motion.ul)`\r\n  z-index: 1400;\r\n  background-color: white;\r\n  letter-spacing: 2px;\r\n  width: 100%;\r\n  position: fixed;\r\n  top: 85px;\r\n  left: 0;\r\n  padding: 0 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n  transform: translateX(-130%);\r\n  & > a {\r\n    text-decoration: none;\r\n  }\r\n  & li {\r\n    font-size: 1.2em;\r\n    color: #000;\r\n    height: 8vh;\r\n    font-weight: bold;\r\n    display: flex;\r\n    align-items: center;\r\n    text-transform: uppercase;\r\n\r\n    &:nth-child(1) {\r\n      justify-content: space-between;\r\n      & > button {\r\n        height: 43px;\r\n        width: 43px;\r\n        border: 1px solid #bbbdbf;\r\n        background-color: white;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { motion } from 'framer-motion';\r\n\r\nexport interface BasketDropDownProps {\r\n  basketOpen: boolean;\r\n}\r\n\r\nconst BasketDropDown: React.SFC<BasketDropDownProps> = ({ basketOpen }) => (\r\n  <Styled\r\n    animate={basketOpen ? 'basketOpen' : 'basketClose'}\r\n    variants={{\r\n      basketClose: { y: '-200%', transition: { duration: 0.6 } },\r\n      basketOpen: { y: '0', transition: { duration: 0.6 } },\r\n    }}\r\n  >\r\n    <ul>\r\n      <li>$44.50</li>\r\n      <NavLink to=\"/\" exact activeClassName=\"activeLink\">\r\n        <li>View Cart</li>\r\n      </NavLink>\r\n\r\n      <NavLink to=\"/\" exact activeClassName=\"activeLink\">\r\n        <li>Checkout</li>\r\n      </NavLink>\r\n    </ul>\r\n  </Styled>\r\n);\r\n\r\nexport default BasketDropDown;\r\n\r\nconst Styled = styled(motion.div)`\r\n  z-index: 2000;\r\n  position: absolute;\r\n  right: 30px;\r\n  transform: translateY(-200%);\r\n  & > ul {\r\n    z-index: 1400;\r\n    background-color: white;\r\n    letter-spacing: 2px;\r\n    width: 115px;\r\n    /* position: absolute; */\r\n    top: 85px;\r\n    /* right: 50px; */\r\n    padding: 0 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-evenly;\r\n\r\n    align-items: center;\r\n\r\n    & li {\r\n      font-size: 1.2em;\r\n      color: #000;\r\n      height: 8vh;\r\n      font-weight: bold;\r\n      display: flex;\r\n      align-items: center;\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { MdKeyboardArrowRight } from 'react-icons/md';\r\nimport { motion } from 'framer-motion';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport styled from 'styled-components';\r\n\r\nexport interface NavLinksProps {\r\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setFreatures: React.Dispatch<React.SetStateAction<boolean>>;\r\n  fontColor: string;\r\n}\r\n\r\nconst NavLinks: React.SFC<NavLinksProps> = ({ setIsOpen, setFreatures, fontColor }) => {\r\n  return (\r\n    <ContainerLi\r\n      fontColor={fontColor}\r\n      variants={\r\n        window.screen.width < 1000\r\n          ? {\r\n              closed: { x: '130%', transition: { duration: 0.6 } },\r\n              open: { x: 0, transition: { duration: 0.6 } },\r\n              openFeatures: { x: '130%', transition: { duration: 0.6 } },\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n      <ol>\r\n        <input type=\"text\" placeholder=\"Search...\" />\r\n\r\n        <button type=\"button\" style={{ color: fontColor, opacity: 1 }}>\r\n          <FaSearch style={{ color: fontColor, opacity: 1 }} />\r\n        </button>\r\n      </ol>\r\n      <NavLink\r\n        to=\"/\"\r\n        exact\r\n        activeClassName=\"activeLink\"\r\n        onClick={() => {\r\n          setIsOpen(false);\r\n        }}\r\n      >\r\n        <ol>Home</ol>\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/about\"\r\n        exact\r\n        activeClassName=\"activeLink\"\r\n        onClick={() => {\r\n          setIsOpen(false);\r\n        }}\r\n      >\r\n        <ol>About</ol>\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/menu\"\r\n        exact\r\n        activeClassName=\"activeLink\"\r\n        onClick={() => {\r\n          setIsOpen(false);\r\n        }}\r\n      >\r\n        <ol>Menu</ol>\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/reservations\"\r\n        exact\r\n        activeClassName=\"activeLink\"\r\n        onClick={() => {\r\n          setIsOpen(false);\r\n        }}\r\n      >\r\n        <ol> Reservations</ol>\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/blog\"\r\n        exact\r\n        activeClassName=\"activeLink\"\r\n        onClick={() => {\r\n          setIsOpen(false);\r\n        }}\r\n      >\r\n        <ol>Blog</ol>\r\n      </NavLink>\r\n      <ol>\r\n        <span>Features</span>\r\n        <button type=\"button\" onClick={() => setFreatures(true)}>\r\n          <MdKeyboardArrowRight />\r\n        </button>\r\n      </ol>\r\n      <NavLink\r\n        to=\"/shop\"\r\n        exact\r\n        activeClassName=\"activeLink\"\r\n        onClick={() => {\r\n          setIsOpen(false);\r\n        }}\r\n      >\r\n        <ol>Shop</ol>\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/contact\"\r\n        exact\r\n        activeClassName=\"activeLink\"\r\n        onClick={() => {\r\n          setIsOpen(false);\r\n        }}\r\n      >\r\n        <ol>Contact</ol>\r\n      </NavLink>\r\n      <div />\r\n    </ContainerLi>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n\r\ninterface ContainerLiProps {\r\n  fontColor: string;\r\n}\r\n\r\nconst ContainerLi = styled(motion.li)<ContainerLiProps>`\r\n  z-index: 1400;\r\n  /* background-color: white; */\r\n  letter-spacing: 2px;\r\n  width: 100%;\r\n  position: fixed;\r\n  top: 85px;\r\n  left: 0;\r\n  padding: 0 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n  transform: translateX(130%);\r\n  background-color: white;\r\n  & > a {\r\n    text-decoration: none;\r\n  }\r\n  & ol {\r\n    font-size: 1.2em;\r\n    color: black;\r\n    height: 8vh;\r\n    font-weight: bold;\r\n    display: flex;\r\n    align-items: center;\r\n    text-transform: uppercase;\r\n\r\n    & input {\r\n      height: 30px;\r\n      width: 100%;\r\n      border: none;\r\n      font-size: 1.2em;\r\n      background-color: transparent;\r\n      &::placeholder {\r\n        color: #bbbdbf;\r\n      }\r\n    }\r\n    & > button {\r\n      padding: 5px;\r\n      border: none;\r\n      background-color: transparent;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      & svg {\r\n      }\r\n    }\r\n    &:nth-child(7) {\r\n      justify-content: space-between;\r\n\r\n      & > button {\r\n        height: 43px;\r\n        width: 43px;\r\n        border: 1px solid #bbbdbf;\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n\r\n  & > div {\r\n    display: none;\r\n  }\r\n\r\n  @media screen and (min-width: 1000px) {\r\n    width: 800px;\r\n    position: initial;\r\n    top: initial;\r\n    left: initial;\r\n    padding: initial;\r\n    flex-direction: initial;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-right: 10px;\r\n    transform: initial;\r\n    background-color: initial;\r\n    & ol {\r\n      margin: 0;\r\n      color: ${props => props.fontColor};\r\n      & input {\r\n        width: 60px;\r\n        &:focus {\r\n          width: 100%;\r\n        }\r\n      }\r\n      &:first-child {\r\n        order: 1;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n      }\r\n\r\n      &:nth-child(7) {\r\n        display: none;\r\n      }\r\n    }\r\n    & > div {\r\n      display: block;\r\n      width: 1px;\r\n      height: 12px;\r\n      background-color: black;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { motion } from 'framer-motion';\r\nimport { style1, style1Type } from '../../../state/style/style1';\r\n\r\ninterface HamburgerMenuProps {\r\n  toggle: () => void;\r\n}\r\n\r\nconst HamburgerMenu: React.SFC<HamburgerMenuProps> = ({ toggle }) => (\r\n  <Button onClick={toggle}>\r\n    <Span\r\n      variants={{\r\n        closed: { rotate: 0 },\r\n        open: { rotate: 135, transition: { duration: 0.4 } },\r\n      }}\r\n    >\r\n      <SpanChild\r\n        styled={style1}\r\n        variants={{\r\n          open: { y: 0 },\r\n          closed: { y: -7 },\r\n        }}\r\n      />\r\n      <SpanChild styled={style1} />\r\n      <SpanChild\r\n        styled={style1}\r\n        variants={{\r\n          open: { y: 0, rotate: 90 },\r\n          closed: { y: 7, rotate: 0 },\r\n        }}\r\n      />\r\n    </Span>\r\n  </Button>\r\n);\r\n\r\nexport default HamburgerMenu;\r\n\r\nconst Button = styled.button`\r\n  display: flex;\r\n  /* top: 10px;\r\n  right: 10px; */\r\n\r\n  height: 50px;\r\n  /* margin-right: 20px; */\r\n\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-basis: 70px;\r\n  border: 0;\r\n  cursor: pointer;\r\n  background-color: transparent;\r\n  /* background-color: red; */\r\n  @media screen and (min-width: 1000px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Span = styled(motion.span)`\r\n  position: relative;\r\n  width: 18px;\r\n  height: 15px;\r\n  /* background-color: blue; */\r\n`;\r\n\r\nconst SpanChild = styled(motion.span)<style1Type>`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 1px;\r\n  position: absolute;\r\n  background-color: ${props => props.styled.nav.navHamburgerColor};\r\n  top: 50%;\r\n\r\n  &:nth-child(1) {\r\n    transform: translateY(-5px);\r\n  }\r\n\r\n  &:nth-child(3) {\r\n    transform: translateY(5px);\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { FaShoppingCart } from 'react-icons/fa';\r\nimport styled from 'styled-components';\r\nimport HamburgerMenu from './HamburgerMenu';\r\n\r\nexport interface NavIconsProps {\r\n  state: {\r\n    isOpen: boolean;\r\n    basketOpen: boolean;\r\n    fontColor: string;\r\n    setBasketOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n    setFreatures: React.Dispatch<React.SetStateAction<boolean>>;\r\n    setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  };\r\n}\r\n\r\nconst NavIcons: React.SFC<NavIconsProps> = ({ state }) => {\r\n  const { isOpen, basketOpen, setBasketOpen, setFreatures, setIsOpen, fontColor } = state;\r\n\r\n  return (\r\n    <ContainerLi fontColor={fontColor}>\r\n      <ol>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            setBasketOpen(!basketOpen);\r\n            setIsOpen(false);\r\n            setFreatures(false);\r\n          }}\r\n        >\r\n          <FaShoppingCart style={{ color: fontColor }} />\r\n        </button>\r\n        <div>2</div>\r\n      </ol>\r\n      <ol>\r\n        <HamburgerMenu\r\n          toggle={() => {\r\n            setIsOpen(!isOpen);\r\n            setFreatures(false);\r\n            setBasketOpen(false);\r\n          }}\r\n        />\r\n      </ol>\r\n    </ContainerLi>\r\n  );\r\n};\r\n\r\nexport default NavIcons;\r\n\r\ninterface ContainerLiProps {\r\n  fontColor: string;\r\n}\r\nconst ContainerLi = styled.li<ContainerLiProps>`\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  & > ol {\r\n    flex-basis: 30px;\r\n    font-size: 1.2em;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 0 13px;\r\n    color: ${props => props.fontColor};\r\n    &:first-child {\r\n      & > div,\r\n      button {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        padding: 5px;\r\n        border: none;\r\n        background-color: transparent;\r\n      }\r\n      & > button {\r\n        cursor: pointer;\r\n      }\r\n      &::after {\r\n        content: '';\r\n        height: 15px;\r\n        width: 1px;\r\n        background-color: #000000;\r\n        transform: translateX(10px);\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1000px) {\r\n    & > ol {\r\n      margin: initial;\r\n      &:first-child {\r\n        &::after {\r\n          display: none;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { motion } from 'framer-motion';\r\nimport { style1, style1Type } from '../../state/style/style1';\r\n\r\nimport Features from './components/Freatures';\r\nimport BasketDropDown from './components/BasketDropDown';\r\nimport NavLinks from './components/NavLinks';\r\nimport NavIcons from './components/NavIcons';\r\n\r\nexport interface NavBarProps {}\r\n\r\nconst NavBar: React.FC<NavBarProps> = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [features, setFreatures] = useState(false);\r\n  const [basketOpen, setBasketOpen] = useState(false);\r\n  const [fontColor, setFontColor] = useState('white');\r\n\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (location.pathname === '/') {\r\n      setFontColor('black');\r\n    } else {\r\n      setFontColor('white');\r\n    }\r\n  }, [location]);\r\n\r\n  return (\r\n    <Styled styled={style1} fontColor={fontColor}>\r\n      <header>\r\n        <h1>Renome</h1>\r\n        <motion.nav animate={isOpen ? (features ? 'openFeatures' : 'open') : 'closed'}>\r\n          <ul>\r\n            <NavLinks setIsOpen={setIsOpen} setFreatures={setFreatures} fontColor={fontColor} />\r\n            <NavIcons state={{ isOpen, basketOpen, fontColor, setBasketOpen, setFreatures, setIsOpen }} />\r\n          </ul>\r\n\r\n          <Features\r\n            toggle={() => setFreatures(!features)}\r\n            close={() => {\r\n              setIsOpen(false);\r\n              setFreatures(false);\r\n            }}\r\n          />\r\n\r\n          <BasketDropDown basketOpen={basketOpen} />\r\n        </motion.nav>\r\n      </header>\r\n    </Styled>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n\r\nconst Styled = styled.div<style1Type>`\r\n  position: absolute;\r\n  width: 100%;\r\n  z-index: 300;\r\n  & > header {\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    max-width: 1200px;\r\n    height: 85px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0 10px;\r\n    z-index: 1500;\r\n    /* position: absolute; */\r\n\r\n    & > h1 {\r\n      font-size: 2.5em;\r\n      font-weight: 400;\r\n      letter-spacing: 2px;\r\n      color: ${props => props.fontColor};\r\n      z-index: 400;\r\n    }\r\n    & > nav {\r\n      position: relative;\r\n    }\r\n\r\n    @media screen and (min-width: 1000px) {\r\n      height: 100px;\r\n      & > nav {\r\n        & > ul {\r\n          display: flex;\r\n          justify-content: space-evenly;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { lazy } from 'react';\r\nimport { Route, Switch } from 'react-router';\r\n\r\nconst Home = lazy(() => import('./home/Home'));\r\nconst About = lazy(() => import('./about/About'));\r\nconst Menu = lazy(() => import('./menu/Menu'));\r\nconst Reservations = lazy(() => import('./reservations/Reservations'));\r\nconst Blog = lazy(() => import('./blog/Blog'));\r\nconst Shop = lazy(() => import('./shop/Shop'));\r\nconst Contact = lazy(() => import('./contact/Contact'));\r\n\r\nexport interface PagesProps {}\r\n\r\nconst Pages: React.SFC<PagesProps> = () => (\r\n  <Switch>\r\n    <Route path=\"/\" exact component={Home} />\r\n    <Route path=\"/about\" exact component={About} />\r\n    <Route path=\"/menu\" exact component={Menu} />\r\n    <Route path=\"/contact\" exact component={Contact} />\r\n    <Route path=\"/reservations\" exact component={Reservations} />\r\n    <Route path=\"/blog\" exact component={Blog} />\r\n    <Route path=\"/shop\" exact component={Shop} />\r\n  </Switch>\r\n);\r\n\r\nexport default Pages;\r\n","import { BrowserRouter as Router } from 'react-router-dom';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport React, { Suspense } from 'react';\r\nimport NavBar from './layout/navbar/NavBar';\r\nimport { style1, style1Type } from './state/style/style1';\r\nimport Pages from './pages/Pages';\r\n\r\n// const Footer = lazy(() => import('./layout/Footer'));\r\n\r\nconst App: React.FC = () => (\r\n  <Suspense fallback={<>loading...</>}>\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <GlobalStyle styled={style1} />\r\n      <NavBar />\r\n      <main>\r\n        <Pages />\r\n      </main>\r\n      {/* <Footer /> */}\r\n    </Router>\r\n  </Suspense>\r\n);\r\n//\r\nexport default App;\r\n\r\nconst GlobalStyle = createGlobalStyle<style1Type>`\r\n@import url('href=\"https://fonts.googleapis.com/css?family=Montserrat:400,700&display=swap&subset=latin-ext\" rel=\"stylesheet\"');\r\n\r\n*,*::after,*::before{\r\n  margin:0; \r\n  padding:0;\r\n  box-sizing:border-box;\r\n}\r\nbody{\r\noverflow-x:hidden;\r\nfont-family: 'Montserrat', sans-serif;\r\nfont-size:10px;\r\n}\r\n\r\n.activeLink {\r\n    & > ol,li {\r\n      color: ${props => props.styled.nav.navActive} !important;\r\n    }\r\n  }\r\n\r\n\r\nimg {\r\n    width: auto;\r\n    height: auto;\r\n\r\n  }\r\n\r\nh2 {\r\n    font-size:3.8em;\r\n    font-weight: 400;\r\n    letter-spacing:3px;\r\n  }\r\nh3 {\r\n    font-size:2em;\r\n    font-weight: 400;\r\n    letter-spacing:3px;\r\n  }\r\np {\r\n  font-size:1.2em;\r\n  letter-spacing:1px;\r\n  line-height: 3em;\r\n}\r\na {\r\n  text-decoration :none;\r\n}\r\n\r\n\r\n@media screen and (min-width:1000px) {\r\n  h2 {\r\n    font-size:5em;\r\n\r\n  }\r\n  h3 {\r\n    font-size:2.5em;\r\n \r\n  }\r\n}\r\n`;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offolne and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}